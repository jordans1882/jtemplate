/*
 * This file was generated by the Gradle 'init' task.
 *
 * This project uses @Incubating APIs which are subject to change.
 */

import org.panteleyev.jpackage.ImageType;

repositories {
  mavenCentral()
}

plugins {
  application
  // id("jtemplate.java-application-conventions")
  id("org.panteleyev.jpackageplugin") version "1.5.2"
}

dependencies {
  implementation(project(":utilities"))
  testImplementation("org.junit.jupiter:junit-jupiter:5.7.1")
}

application {
  // Define the main class for the application.
  mainClass.set("jtemplate.app.App")
}

tasks.named<Test>("test") {
    useJUnitPlatform()

    maxHeapSize = "1G"

    testLogging {
        events("passed")
    }
}

task("copyDependencies", Copy::class) {
    from(configurations.runtimeClasspath).into("$buildDir/jmods")
}

task("copyJar", Copy::class) {
    from(tasks.jar).into("$buildDir/jmods")
}

tasks.jpackage {
  dependsOn("build", "copyDependencies", "copyJar")

  appName = "Application Name"
  appVersion = project.version.toString()
  vendor = "app.org"
  copyright = "Copyright (c) 2020 Vendor"
  runtimeImage = System.getProperty("java.home")
  input = "$buildDir/jmods"
  mainJar = tasks.jar.get().archiveFileName.get()
  mainClass = "jtemplate.app.App"
  destination = "$buildDir/dist"
  javaOptions = listOf("-Dfile.encoding=UTF-8")
  type = ImageType.APP_IMAGE
  mac { icon = "icons/icons.icns" }

  windows {
    icon = "icons/icons.ico"
    winMenu = true
    winDirChooser = true
  }
}
